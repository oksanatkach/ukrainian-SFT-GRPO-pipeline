{
  "alpha_pattern": {},
  "auto_mapping": null,
  "base_model_name_or_path": null,
  "bias": "none",
  "corda_config": null,
  "eva_config": null,
  "exclude_modules": null,
  "fan_in_fan_out": false,
  "inference_mode": true,
  "init_lora_weights": true,
  "layer_replication": null,
  "layers_pattern": null,
  "layers_to_transform": null,
  "loftq_config": {},
  "lora_alpha": 16,
  "lora_bias": false,
  "lora_dropout": 0.05,
  "megatron_config": null,
  "megatron_core": "megatron.core",
  "modules_to_save": null,
  "peft_type": "LORA",
  "qalora_group_size": 16,
  "r": 8,
  "rank_pattern": {},
  "revision": null,
  "target_modules": {
    "_content": [
      {
        "_flags_cache": null,
        "_metadata": {
          "flags": {},
          "flags_root": false,
          "key": 0,
          "object_type": null,
          "optional": true,
          "ref_type": "<CIRCULAR_REF:_AnyMeta>",
          "resolver_cache": {}
        },
        "_parent": "<CIRCULAR_REF:ListConfig>",
        "_val": "q_proj"
      },
      {
        "_flags_cache": null,
        "_metadata": {
          "flags": {},
          "flags_root": false,
          "key": 1,
          "object_type": null,
          "optional": true,
          "ref_type": "<CIRCULAR_REF:_AnyMeta>",
          "resolver_cache": {}
        },
        "_parent": "<CIRCULAR_REF:ListConfig>",
        "_val": "k_proj"
      },
      {
        "_flags_cache": null,
        "_metadata": {
          "flags": {},
          "flags_root": false,
          "key": 2,
          "object_type": null,
          "optional": true,
          "ref_type": "<CIRCULAR_REF:_AnyMeta>",
          "resolver_cache": {}
        },
        "_parent": "<CIRCULAR_REF:ListConfig>",
        "_val": "v_proj"
      },
      {
        "_flags_cache": null,
        "_metadata": {
          "flags": {},
          "flags_root": false,
          "key": 3,
          "object_type": null,
          "optional": true,
          "ref_type": "<CIRCULAR_REF:_AnyMeta>",
          "resolver_cache": {}
        },
        "_parent": "<CIRCULAR_REF:ListConfig>",
        "_val": "o_proj"
      },
      {
        "_flags_cache": null,
        "_metadata": {
          "flags": {},
          "flags_root": false,
          "key": 4,
          "object_type": null,
          "optional": true,
          "ref_type": "<CIRCULAR_REF:_AnyMeta>",
          "resolver_cache": {}
        },
        "_parent": "<CIRCULAR_REF:ListConfig>",
        "_val": "gate_proj"
      },
      {
        "_flags_cache": null,
        "_metadata": {
          "flags": {},
          "flags_root": false,
          "key": 5,
          "object_type": null,
          "optional": true,
          "ref_type": "<CIRCULAR_REF:_AnyMeta>",
          "resolver_cache": {}
        },
        "_parent": "<CIRCULAR_REF:ListConfig>",
        "_val": "up_proj"
      },
      {
        "_flags_cache": null,
        "_metadata": {
          "flags": {},
          "flags_root": false,
          "key": 6,
          "object_type": null,
          "optional": true,
          "ref_type": "<CIRCULAR_REF:_AnyMeta>",
          "resolver_cache": {}
        },
        "_parent": "<CIRCULAR_REF:ListConfig>",
        "_val": "down_proj"
      }
    ],
    "_flags_cache": null,
    "_metadata": {
      "element_type": "<CIRCULAR_REF:_AnyMeta>",
      "flags": {
        "allow_objects": true
      },
      "flags_root": false,
      "key": null,
      "key_type": "mappingproxy({'__new__': <built-in method __new__ of type object at 0x16a40e0>, '__repr__': <slot wrapper '__repr__' of 'int' objects>, '__hash__': <slot wrapper '__hash__' of 'int' objects>, '__getattribute__': <slot wrapper '__getattribute__' of 'int' objects>, '__lt__': <slot wrapper '__lt__' of 'int' objects>, '__le__': <slot wrapper '__le__' of 'int' objects>, '__eq__': <slot wrapper '__eq__' of 'int' objects>, '__ne__': <slot wrapper '__ne__' of 'int' objects>, '__gt__': <slot wrapper '__gt__' of 'int' objects>, '__ge__': <slot wrapper '__ge__' of 'int' objects>, '__add__': <slot wrapper '__add__' of 'int' objects>, '__radd__': <slot wrapper '__radd__' of 'int' objects>, '__sub__': <slot wrapper '__sub__' of 'int' objects>, '__rsub__': <slot wrapper '__rsub__' of 'int' objects>, '__mul__': <slot wrapper '__mul__' of 'int' objects>, '__rmul__': <slot wrapper '__rmul__' of 'int' objects>, '__mod__': <slot wrapper '__mod__' of 'int' objects>, '__rmod__': <slot wrapper '__rmod__' of 'int' objects>, '__divmod__': <slot wrapper '__divmod__' of 'int' objects>, '__rdivmod__': <slot wrapper '__rdivmod__' of 'int' objects>, '__pow__': <slot wrapper '__pow__' of 'int' objects>, '__rpow__': <slot wrapper '__rpow__' of 'int' objects>, '__neg__': <slot wrapper '__neg__' of 'int' objects>, '__pos__': <slot wrapper '__pos__' of 'int' objects>, '__abs__': <slot wrapper '__abs__' of 'int' objects>, '__bool__': <slot wrapper '__bool__' of 'int' objects>, '__invert__': <slot wrapper '__invert__' of 'int' objects>, '__lshift__': <slot wrapper '__lshift__' of 'int' objects>, '__rlshift__': <slot wrapper '__rlshift__' of 'int' objects>, '__rshift__': <slot wrapper '__rshift__' of 'int' objects>, '__rrshift__': <slot wrapper '__rrshift__' of 'int' objects>, '__and__': <slot wrapper '__and__' of 'int' objects>, '__rand__': <slot wrapper '__rand__' of 'int' objects>, '__xor__': <slot wrapper '__xor__' of 'int' objects>, '__rxor__': <slot wrapper '__rxor__' of 'int' objects>, '__or__': <slot wrapper '__or__' of 'int' objects>, '__ror__': <slot wrapper '__ror__' of 'int' objects>, '__int__': <slot wrapper '__int__' of 'int' objects>, '__float__': <slot wrapper '__float__' of 'int' objects>, '__floordiv__': <slot wrapper '__floordiv__' of 'int' objects>, '__rfloordiv__': <slot wrapper '__rfloordiv__' of 'int' objects>, '__truediv__': <slot wrapper '__truediv__' of 'int' objects>, '__rtruediv__': <slot wrapper '__rtruediv__' of 'int' objects>, '__index__': <slot wrapper '__index__' of 'int' objects>, 'conjugate': <method 'conjugate' of 'int' objects>, 'bit_length': <method 'bit_length' of 'int' objects>, 'bit_count': <method 'bit_count' of 'int' objects>, 'to_bytes': <method 'to_bytes' of 'int' objects>, 'from_bytes': <method 'from_bytes' of 'int' objects>, 'as_integer_ratio': <method 'as_integer_ratio' of 'int' objects>, '__trunc__': <method '__trunc__' of 'int' objects>, '__floor__': <method '__floor__' of 'int' objects>, '__ceil__': <method '__ceil__' of 'int' objects>, '__round__': <method '__round__' of 'int' objects>, '__getnewargs__': <method '__getnewargs__' of 'int' objects>, '__format__': <method '__format__' of 'int' objects>, '__sizeof__': <method '__sizeof__' of 'int' objects>, 'is_integer': <method 'is_integer' of 'int' objects>, 'real': <attribute 'real' of 'int' objects>, 'imag': <attribute 'imag' of 'int' objects>, 'numerator': <attribute 'numerator' of 'int' objects>, 'denominator': <attribute 'denominator' of 'int' objects>, '__doc__': \"int([x]) -> integer\\nint(x, base=10) -> integer\\n\\nConvert a number or string to an integer, or return 0 if no arguments\\nare given.  If x is a number, return x.__int__().  For floating-point\\nnumbers, this truncates towards zero.\\n\\nIf x is not a number or if base is given, then x must be a string,\\nbytes, or bytearray instance representing an integer literal in the\\ngiven base.  The literal can be preceded by '+' or '-' and be surrounded\\nby whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.\\nBase 0 means to interpret the base from the string as an integer literal.\\n>>> int('0b100', base=0)\\n4\"})",
      "object_type": "mappingproxy({'__new__': <built-in method __new__ of type object at 0x16a36d0>, '__repr__': <slot wrapper '__repr__' of 'list' objects>, '__hash__': None, '__getattribute__': <slot wrapper '__getattribute__' of 'list' objects>, '__lt__': <slot wrapper '__lt__' of 'list' objects>, '__le__': <slot wrapper '__le__' of 'list' objects>, '__eq__': <slot wrapper '__eq__' of 'list' objects>, '__ne__': <slot wrapper '__ne__' of 'list' objects>, '__gt__': <slot wrapper '__gt__' of 'list' objects>, '__ge__': <slot wrapper '__ge__' of 'list' objects>, '__iter__': <slot wrapper '__iter__' of 'list' objects>, '__init__': <slot wrapper '__init__' of 'list' objects>, '__len__': <slot wrapper '__len__' of 'list' objects>, '__getitem__': <method '__getitem__' of 'list' objects>, '__setitem__': <slot wrapper '__setitem__' of 'list' objects>, '__delitem__': <slot wrapper '__delitem__' of 'list' objects>, '__add__': <slot wrapper '__add__' of 'list' objects>, '__mul__': <slot wrapper '__mul__' of 'list' objects>, '__rmul__': <slot wrapper '__rmul__' of 'list' objects>, '__contains__': <slot wrapper '__contains__' of 'list' objects>, '__iadd__': <slot wrapper '__iadd__' of 'list' objects>, '__imul__': <slot wrapper '__imul__' of 'list' objects>, '__reversed__': <method '__reversed__' of 'list' objects>, '__sizeof__': <method '__sizeof__' of 'list' objects>, 'clear': <method 'clear' of 'list' objects>, 'copy': <method 'copy' of 'list' objects>, 'append': <method 'append' of 'list' objects>, 'insert': <method 'insert' of 'list' objects>, 'extend': <method 'extend' of 'list' objects>, 'pop': <method 'pop' of 'list' objects>, 'remove': <method 'remove' of 'list' objects>, 'index': <method 'index' of 'list' objects>, 'count': <method 'count' of 'list' objects>, 'reverse': <method 'reverse' of 'list' objects>, 'sort': <method 'sort' of 'list' objects>, '__class_getitem__': <method '__class_getitem__' of 'list' objects>, '__doc__': 'Built-in mutable sequence.\\n\\nIf no argument is given, the constructor creates a new empty list.\\nThe argument must be an iterable if specified.'})",
      "optional": true,
      "ref_type": "mappingproxy({'__module__': 'typing', '__firstlineno__': 598, '__doc__': 'Special type indicating an unconstrained type.\\n\\n- Any is compatible with every type.\\n- Any assumed to have all methods.\\n- All values assumed to be instances of Any.\\n\\nNote that all the above statements are true from the point of view of\\nstatic type checkers. At runtime, Any should not be used with instance\\nchecks.\\n', '__new__': <staticmethod(<function Any.__new__ at 0x7fa8d93f53a0>)>, '__static_attributes__': (), '__dict__': <attribute '__dict__' of 'Any' objects>, '__weakref__': <attribute '__weakref__' of 'Any' objects>})",
      "resolver_cache": {}
    },
    "_parent": null
  },
  "target_parameters": null,
  "task_type": "CAUSAL_LM",
  "trainable_token_indices": null,
  "use_dora": false,
  "use_qalora": false,
  "use_rslora": false
}